version: '3.8'

x-deploy: &deploy
  deploy:
    mode: global
    update_config:
      delay: 0s
      order: stop-first
      failure_action: continue
    restart_policy:
      condition: on-failure
      delay: 5s
      max_attempts: 5
      window: 120s

x-common: &common
    init: true
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=1

services:
  proxy:
    <<: *deploy
    image: ${DOCKER_REGISTRY}/${DOCKER_REPOSITORY}/${APP_NAME}/proxy:latest
    hostname: "proxy"
    networks:
      - external_network_ipv4
      - external_network_ipv6
      - internal_kc
    secrets:
      - source: iam-proxy-https-crt
        target: /etc/nginx/certs/crt_.pem
      - source: iam-proxy-https-key
        target: /etc/nginx/certs/key_.pem
      - source: api-jwk
        target: /etc/nginx/api-jwk/api_secret.jwk
    ports:
      - target: 443
        published: "$PROXY_EXTERNAL_PORT"
        protocol: tcp
        mode: ingress
      - target: 8443
        published: "$PROXY_INTERNAL_PORT"
        protocol: tcp
        mode: ingress
    environment:
      NGX_JWT_APP_SCOPE: ${JWT_APP_SCOPE}
      NGX_APP_NAME: ${APP_NAME}

  kc:
    <<: *deploy
    <<: *common
    image: ${DOCKER_REGISTRY}/${DOCKER_REPOSITORY}/${APP_NAME}/kc:latest
    hostname: "kc"
    networks:
      - mgmt_network
      - internal_kc
      - internal_pg
    secrets:
      - source: kc-site.key
        target: "/run/secrets/${KC_HOSTNAME}.key"
      - source: kc-site.crt
        target: "/run/secrets/${KC_HOSTNAME}.crt"
    environment:
      KC_DB_URL: "jdbc:postgresql://pg:5432/${KC_POSTGRES_DB}"
      KC_HOSTNAME: "${KC_HOSTNAME}"
      KC_DB_USERNAME: "${KC_POSTGRES_USER}"
      KC_DB_PASSWORD: "${KC_POSTGRES_PASSWORD}"
      KEYCLOAK_ADMIN: "${KC_ADMIN_USER}"
      KEYCLOAK_ADMIN_PASSWORD: "${KC_ADMIN_PASS}"
      KC_HTTPS_PORT: 8443
      KC_HTTPS_KEY_STORE_PASSWORD: "${KC_HTTPS_KEY_STORE_PASSWORD}"
      JAVA_OPTIONS: "${JAVA_OPTIONS}"
    volumes:
      - /dev/urandom:/dev/random:ro
      - type: tmpfs
        target: /dev/shm
        tmpfs:
          size: 134217728
    dns:
      - 127.0.0.11

  pg:
    <<: *deploy
    <<: *common
    image: postgres:17-alpine
    hostname: "pg"
    environment:
      POSTGRES_DB: "${KC_POSTGRES_DB}"
      POSTGRES_USER: "${KC_POSTGRES_USER}"
      POSTGRES_PASSWORD: "${KC_POSTGRES_PASSWORD}"
      POSTGRES_INITDB_ARGS: "--data-checksums"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    networks:
      - internal_pg
    volumes:
      - kc-pgdata:/var/lib/postgresql/data:rw
      - type: tmpfs
        target: /dev/shm
        tmpfs:
          size: 134217728
    # only here to have networking/routing/gateway
    ports:
      - target: 4444
        protocol: tcp

networks:
  external_network_ipv6:
    external: true

  external_network_ipv4:
    external: true

  internal_pg:
    driver: overlay
    internal: true
    attachable: true
    driver_opts:
      encrypted: "1"
      gateway: 10.1.14.1
    ipam:
      driver: default
      config:
        - subnet: 10.1.14.0/24

  mgmt_network:
    driver: overlay
    internal: true
    attachable: true
    driver_opts:
      encrypted: "1"
      gateway: 10.1.15.1
    ipam:
      driver: default
      config:
        - subnet: 10.1.15.0/24

  internal_kc:
    driver: overlay
    internal: true
    attachable: true
    driver_opts:
      encrypted: "1"
      gateway: 10.1.16.1
    ipam:
      driver: default
      config:
        - subnet: 10.1.16.0/24


secrets:
  kc-site.key:
    name: "kc-site.key-$CFG_PREFIX"
    external: true
  kc-site.crt:
    name: "kc-site.crt-$CFG_PREFIX"
    external: true
  iam-proxy-https-crt:
    name: "iam-proxy-https-crt-$CFG_PREFIX"
    external: true
  iam-proxy-https-key:
    name: "iam-proxy-https-key-$CFG_PREFIX"
    external: true
  api-jwk:
    name: "api-jwk-$CFG_PREFIX"
    external: true

volumes:
  kc-pgdata:
    name: "kc-pgdata"
